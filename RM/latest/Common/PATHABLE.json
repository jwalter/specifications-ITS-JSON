{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/RM/latest/Common/PATHABLE.json",
    "title": "PATHABLE",
    "description": "The PATHABLE class defines the pathing capabilities used by nearly all classes in the openEHR reference model, mostly via inheritance of LOCATABLE. The defining characteristics of PATHABLE objects are that they can locate child objects using paths, and they know their parent object in a compositional hierarchy. The parent feature is defined as abstract in the model, and may be implemented in any way convenient.",
    "$comments": "Defined in Common IM, abstract",
    "type": "object",
    "$abstract": true,
    "$functions": {
        "parent": {
            "description": "Parent of this node in a compositional hierarchy. \n",
            "return": {
                "$ref": "all.json#/definitions/PATHABLE"
            }
        },
        "item_at_path": {
            "description": "The item at a path (relative to this item); only valid for unique paths, i.e. paths that resolve to a single item. ",
            "parameters": {
                "a_path": {
                    "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_path"
            ],
            "return": {
                "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/Any"
            }
        },
        "items_at_path": {
            "description": "List of items corresponding to a non-unique path.",
            "parameters": {
                "a_path": {
                    "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_path"
            ],
            "return": {
                "type": "array",
                "items": {
                    "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/Any"
                }
            }
        },
        "path_exists": {
            "description": "True if the path exists in the data with respect to the current item. ",
            "parameters": {
                "a_path": {
                    "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_path"
            ],
            "return": {
                "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "path_unique": {
            "description": "True if the path corresponds to a single item in the data. ",
            "parameters": {
                "a_path": {
                    "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_path"
            ],
            "return": {
                "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "path_of_item": {
            "description": "The path to an item relative to the root of this archetyped structure.",
            "parameters": {
                "a_loc": {
                    "$ref": "all.json#/definitions/PATHABLE"
                }
            },
            "required_parameters": [
                "a_loc"
            ],
            "return": {
                "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/String"
            }
        }
    },
    "$invariants": {
        "Pre": "path_exists (a_path)"
    }
}