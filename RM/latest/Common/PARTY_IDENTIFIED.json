{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/RM/latest/Common/PARTY_IDENTIFIED.json",
    "title": "PARTY_IDENTIFIED",
    "description": "Proxy data for an identified party other than the subject of the record, minimally consisting of human-readable identifier(s), such as name, formal (and possibly computable) identifiers such as NHS number, and an optional link to external data. There must be at least one of name, identifier or external_ref present.\n\nUsed to describe parties where only identifiers may be known, and there is no entry at all in the demographic system (or even no demographic system). Typically for health care providers, e.g. name and provider number of an institution. \n\nShould not be used to include patient identifying information. ",
    "$comments": "Defined in Common IM, inherits from PARTY_PROXY",
    "type": "object",
    "properties": {
        "external_ref": {
            "description": "Optional reference to more detailed demographic or identification information for this party, in an external system. ",
            "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Base_types/all.json#/definitions/PARTY_REF"
        },
        "name": {
            "description": "Optional human-readable name (in String form).",
            "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/all.json#/definitions/String"
        },
        "identifiers": {
            "description": "One or more formal identifiers (possibly computable). \n",
            "type": "array",
            "items": {
                "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/RM/latest/Data_types/all.json#/definitions/DV_IDENTIFIER"
            }
        }
    },
    "$inherits": [
        "all.json#/definitions/PARTY_PROXY"
    ],
    "$invariants": {
        "Basic_validity": {
            "description": "name /= Void or identifiers /= Void or external_ref /= Void"
        },
        "Name_valid": {
            "description": "name /= Void implies not name.is_empty"
        },
        "Identifiers_valid": {
            "description": "identifiers /= Void implies not identifiers.is_empty"
        }
    }
}