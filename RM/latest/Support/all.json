{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/RM/latest/Support/all.json",
    "title": "Support IM definitions",
    "description": "The rm.support package describes the most basic concepts, required by all other packages, and is comprised of the Definitions, Identification, Terminology and Measurement packages. The semantics defined in these packages allow all other models to use identifiers and to have access to knowledge services like terminology and other reference data. The support package includes the special package assumed_types, describing what basic types are assumed by openEHR in external type systems; this package is a guide for integrating openEHR models proper into the type systems of implementation technologies.",
    "definitions": {
        "EXTERNAL_ENVIRONMENT_ACCESS": {
            "title": "EXTERNAL_ENVIRONMENT_ACCESS",
            "description": "A mixin class providing access to services in the external environment.",
            "$comments": "Defined in Support IM, abstract, inherits from TERMINOLOGY_SERVICE, MEASUREMENT_SERVICE",
            "type": "object",
            "$inherits": [
                "#/definitions/TERMINOLOGY_SERVICE",
                "#/definitions/MEASUREMENT_SERVICE"
            ],
            "$functions": {
                "is_valid_units_string": {
                    "description": "True if the units string  units' is a valid string according to the HL7 UCUM specification."
                },
                "units_equivalent": {
                    "description": "True if two units strings correspond to the same measured property."
                },
                "valid_code_set_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class."
                },
                "valid_terminology_group_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class. "
                },
                "terminology": {
                    "description": "Return an interface to the terminology named name. Allowable names include:-\n\n* openehr, \n* centc251,\n* any name from are taken from the US NLM UMLS meta-data list at http://www.nlm.nih.gov/research/umls/metaa1.html "
                },
                "code_set": {
                    "description": "Return an interface to the code_set identified by the external identifier name (e.g.  ISO_639-1). "
                },
                "code_set_for_id": {
                    "description": "Return an interface to the code_set identified internally in openEHR by id. \n"
                },
                "has_terminology": {
                    "description": "True if terminology named name known by this service. Allowable names include:-\n\n*  openehr  \n* centc251  \n* any name from are taken from the US NLM UMLS meta-data list at       http://www.nlm.nih.gov/research/umls/metaa1.html"
                },
                "has_code_set": {
                    "description": "True if code_set linked to internal name (e.g. languages ) is available. "
                },
                "terminology_identifiers": {
                    "description": "Set of all terminology identifiers known in the terminology service. Values from the US NLM UMLS meta-data list at:- http://www.nlm.nih.gov/research/umls/metaa1.html "
                },
                "openehr_code_sets": {
                    "description": "Set of all code set identifiers known in the terminology service. \n"
                },
                "code_set_identifiers": {
                    "description": "Set of all code sets identifiers for which there is an internal openEHR name; returned as a Map of ids keyed by internal name. "
                }
            },
            "$invariants": {
                "Pre": {
                    "description": "valid_code_set_id (id)"
                }
            }
        },
        "OPENEHR_DEFINITIONS": {
            "title": "OPENEHR_DEFINITIONS",
            "description": "Inheritance class to provide access to constants defined in other packages.",
            "$comments": "Defined in Support IM",
            "type": "object"
        },
        "BASIC_DEFINITIONS": {
            "title": "BASIC_DEFINITIONS",
            "description": "Defines globally used constant values.",
            "$comments": "Defined in Support IM",
            "type": "object"
        },
        "MEASUREMENT_SERVICE": {
            "title": "MEASUREMENT_SERVICE",
            "description": "Defines an object providing proxy access to a measurement information service.",
            "$comments": "Defined in Support IM",
            "type": "object",
            "$functions": {
                "is_valid_units_string": {
                    "description": "True if the units string  units' is a valid string according to the HL7 UCUM specification."
                },
                "units_equivalent": {
                    "description": "True if two units strings correspond to the same measured property."
                }
            }
        },
        "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS": {
            "title": "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
            "description": "List of identifiers for groups in the openEHR terminology. ",
            "$comments": "Defined in Support IM",
            "type": "object",
            "$functions": {
                "valid_terminology_group_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class. "
                }
            }
        },
        "OPENEHR_CODE_SET_IDENTIFIERS": {
            "title": "OPENEHR_CODE_SET_IDENTIFIERS",
            "description": "List of identifiers for code sets in the openEHR terminology. ",
            "$comments": "Defined in Support IM",
            "type": "object",
            "$functions": {
                "valid_code_set_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class."
                }
            }
        },
        "TERMINOLOGY_SERVICE": {
            "title": "TERMINOLOGY_SERVICE",
            "description": "Defines an object providing proxy access to a terminology service. ",
            "$comments": "Defined in Support IM, inherits from OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS, OPENEHR_CODE_SET_IDENTIFIERS",
            "type": "object",
            "$inherits": [
                "#/definitions/OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
                "#/definitions/OPENEHR_CODE_SET_IDENTIFIERS"
            ],
            "$functions": {
                "valid_code_set_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class."
                },
                "valid_terminology_group_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class. "
                },
                "terminology": {
                    "description": "Return an interface to the terminology named name. Allowable names include:-\n\n* openehr, \n* centc251,\n* any name from are taken from the US NLM UMLS meta-data list at http://www.nlm.nih.gov/research/umls/metaa1.html "
                },
                "code_set": {
                    "description": "Return an interface to the code_set identified by the external identifier name (e.g.  ISO_639-1). "
                },
                "code_set_for_id": {
                    "description": "Return an interface to the code_set identified internally in openEHR by id. \n"
                },
                "has_terminology": {
                    "description": "True if terminology named name known by this service. Allowable names include:-\n\n*  openehr  \n* centc251  \n* any name from are taken from the US NLM UMLS meta-data list at       http://www.nlm.nih.gov/research/umls/metaa1.html"
                },
                "has_code_set": {
                    "description": "True if code_set linked to internal name (e.g. languages ) is available. "
                },
                "terminology_identifiers": {
                    "description": "Set of all terminology identifiers known in the terminology service. Values from the US NLM UMLS meta-data list at:- http://www.nlm.nih.gov/research/umls/metaa1.html "
                },
                "openehr_code_sets": {
                    "description": "Set of all code set identifiers known in the terminology service. \n"
                },
                "code_set_identifiers": {
                    "description": "Set of all code sets identifiers for which there is an internal openEHR name; returned as a Map of ids keyed by internal name. "
                }
            },
            "$invariants": {
                "Pre": {
                    "description": "valid_code_set_id (id)"
                }
            }
        }
    }
}