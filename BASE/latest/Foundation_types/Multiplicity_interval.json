{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/BASE/latest/Foundation_types/Multiplicity_interval.json",
    "title": "Multiplicity_interval",
    "description": "An Interval of Integer, used to represent multiplicity, cardinality and optionality in models. ",
    "$comments": "Defined in Foundation_types IM, inherits from Proper_interval",
    "type": "object",
    "properties": {
        "lower": {
            "description": "lower bound.",
            "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/RM/latest/Common/all.json#/definitions/T"
        },
        "lower_unbounded": {
            "description": "lower boundary open (i.e. = -infinity)",
            "$ref": "all.json#/definitions/Boolean"
        },
        "upper_unbounded": {
            "description": "upper boundary open (i.e. = +infinity)",
            "$ref": "all.json#/definitions/Boolean"
        },
        "lower_included": {
            "description": "lower boundary value included in range if not lower_unbounded.",
            "$ref": "all.json#/definitions/Boolean"
        },
        "upper_included": {
            "description": "upper boundary value included in range if not upper_unbounded.",
            "$ref": "all.json#/definitions/Boolean"
        },
        "upper": {
            "description": "Upper bound.",
            "$ref": "https://www.openEHR.org/releases/ITS-JSON/Release-1.0.0/RM/latest/Common/all.json#/definitions/T"
        }
    },
    "required": [
        "lower_unbounded",
        "upper_unbounded",
        "lower_included",
        "upper_included"
    ],
    "$inherits": [
        "all.json#/definitions/Proper_interval"
    ],
    "$functions": {
        "has": {
            "description": "True if (lower_unbounded or \n((lower_included and v >= lower) or \nv > lower)) and \n(upper_unbounded or \n((upper_included and v <= upper or v \n< upper)))"
        },
        "intersects": {
            "description": "True if there is any overlap between intervals represented by Current and `other'. True if at least one limit of other is strictly inside the limits of this interval."
        },
        "contains": {
            "description": "True if current interval properly contains `other'? True if all points of `other' are inside the current interval."
        },
        "is_equal": {
            "description": "True if current object's interval is semantically same as `other'."
        },
        "upper": {
            "description": null
        },
        "is_open": {
            "description": "True if this interval imposes no constraints, i.e. is set to 0..*"
        },
        "is_optional": {
            "description": "True if this interval expresses optionality, i.e. 0..1."
        },
        "is_mandatory": {
            "description": "True if this interval expresses mandation, i.e. 1..1."
        },
        "is_prohibited": {
            "description": "True if this interval is set to 0..0."
        }
    },
    "$invariants": {
        "Lower_included_valid": {
            "description": "lower_unbounded implies not lower_included"
        },
        "Upper_included_valid": {
            "description": "upper_unbounded implies not upper_included"
        },
        "Limits_consistent": {
            "description": "(not upper_unbounded and not lower_unbounded) implies lower <= upper"
        },
        "Limits_comparable": {
            "description": "(not upper_unbounded and not lower_unbounded) implies lower.strictly_comparable_to (upper)"
        }
    }
}